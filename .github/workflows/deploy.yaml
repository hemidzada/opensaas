name: Deploy OpenSaaS to Coolify

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- TÜM DERLEME İŞLEMLERİNİ TEK BİR ADIMDA YAPIYORUZ ---
      - name: Build Project
        run: |
          cd ./template/app
          npm install
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          /home/runner/.local/bin/wasp build

      # --- SUNUCU (SERVER) İMAJINI OLUŞTURUYORUZ ---
      - name: Build and Push Server Image
        run: |
          # Sunucu için Dockerfile'ı anlık olarak oluşturuyoruz
          cat > Dockerfile.server <<EOF
          FROM node:22-slim
          WORKDIR /app
          COPY --from=builder /app/.wasp/build/server/ ./
          ENV NODE_ENV=production
          ENV PORT=3001
          EXPOSE 3001
          CMD ["node", "src/index.js"]
          EOF

          # Dockerfile'ın builder aşamasını çalıştırıp dosyaları hazırlıyoruz
          docker build \
            --target builder \
            -f ./Dockerfile.server \
            -t server-builder-stage .
          
          # Hazırlanan dosyalarla son imajı oluşturup pushluyoruz
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=server-builder-stage \
            -f ./Dockerfile.server \
            -t ghcr.io/hemidzada/opensaas-server:main \
            --push .

      # --- İSTEMCİ (CLIENT) İMAJINI OLUŞTURUYORUZ ---
      - name: Build and Push Client Image
        run: |
          # İstemci için Dockerfile'ı anlık olarak oluşturuyoruz
          cat > Dockerfile.client <<EOF
          FROM nginx:alpine
          COPY ./template/app/.wasp/build/web-app /usr/share/nginx/html
          EOF

          # İstemci imajını oluşturup pushluyoruz
          docker build \
            -f ./Dockerfile.client \
            -t ghcr.io/hemidzada/opensaas-client:main \
            --push .
      
      # --- COOLIFY'İ TETİKLİYORUZ ---
      - name: Trigger Coolify Deploys
        run: |
          curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}
          curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
