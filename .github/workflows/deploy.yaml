name: Deploy OpenSaaS to Coolify

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- 1. Projeyi Derle (Hem Sunucu hem İstemci için) ---
      - name: Install Dependencies and Build Project
        run: |
          cd ./template/app
          npm install
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          /home/runner/.local/bin/wasp build
          
          echo "Building client for production..."
          cd ./.wasp/build/web-app
          REACT_APP_API_URL=https://api.vidhub.ai npm run build

      # --- 2. Sunucu Dockerfile'ını Düzelt ---
      - name: Fix Server Dockerfile for Database Migrations
        run: |
          # Dockerfile'ın içine, uygulama başlamadan önce veritabanı migrate komutunu ekliyoruz.
          sed -i '/CMD \["npm", "run", "start-production"\]/i RUN npx prisma migrate deploy --schema=../db/schema.prisma' ./template/app/.wasp/build/Dockerfile

      # --- 3. Sunucu (Server) İmajını Oluştur ve Yükle ---
      - name: Build and Push Server Image
        uses: docker/build-push-action@v4
        with:
          context: ./template/app/.wasp/build
          file: ./template/app/.wasp/build/Dockerfile
          push: true
          tags: ghcr.io/hemidzada/opensaas-server:main

      # --- 4. İstemci (Client) İmajını Oluştur ve Yükle ---
      - name: Build and Push Client Image
        run: |
          cat > Dockerfile.client <<EOF
          FROM pierrezemb/gostatic
          CMD ["-fallback", "index.html"]
          COPY ./build /srv/http
          EOF

          docker buildx build \
            --file ./Dockerfile.client \
            --tag ghcr.io/hemidzada/opensaas-client:main \
            --push ./template/app/.wasp/build/web-app
      
      # --- 5. Coolify'i Tetikle ---
      - name: Trigger Coolify Deploys
        run: |
          curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}
          curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
