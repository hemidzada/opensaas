name: Deploy OpenSaaS to Coolify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.server
          push: true
          tags: ghcr.io/hemidzada/opensaas-server:main

      - name: Install dependencies for client build
        working-directory: ./template/app
        run: npm install

      - name: Build Wasp app for client
        working-directory: ./template/app
        run: |
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          wasp build
          
      - name: Create client Dockerfile
        run: |
          cat > client.Dockerfile <<EOF
          FROM nginx:alpine
          # YOLU DÜZELTTİK: ./template/app kısmını kaldırdık
          COPY ./.wasp/build/web-app/build /usr/share/nginx/html
          EOF
          
      - name: Build and push client Dockerfile
        uses: docker/build-push-action@v4
        with:
          context: .
          file: client.Dockerfile
          push: true
          tags: ghcr.io/hemidzada/opensaas-client:main

      - name: Trigger Coolify server deploy
        run: curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}

      - name: Trigger Coolify client deploy
        run: curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
