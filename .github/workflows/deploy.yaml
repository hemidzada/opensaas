name: Deploy OpenSaaS to Coolify
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: opensaas
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL... ($i/30)"
            sleep 2
          done
      
      - name: Install Wasp and Dependencies
        run: |
          cd ./template/app
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          npm install
      
      - name: Create Migrations (Local DB Only)
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/opensaas
        run: |
          cd ./template/app
          
          # Migration dosyalarını oluştur (eğer yoksa)
          /home/runner/.local/bin/wasp db migrate-dev --name init --create-only
          
          # Projeyi derle
          /home/runner/.local/bin/wasp build
      
      - name: Build Client for Production
        run: |
          cd ./template/app/.wasp/build/web-app
          REACT_APP_API_URL=https://api.vidhub.ai npm run build
      
      - name: Prepare Server Dockerfile with Migrations
        run: |
          cd ./template/app/.wasp/build
          
          # Migrations klasörünü kopyala
          if [ -d "../migrations" ]; then
            cp -r ../migrations ./migrations
          fi
          
          # Dockerfile'a migration deployment ekle
          sed -i '/CMD \["npm", "run", "start-production"\]/i COPY --chown=node:node migrations ./migrations\nRUN npx prisma migrate deploy' ./Dockerfile
      
      - name: Build and Push Server Image
        run: |
          docker buildx build \
            --file ./template/app/.wasp/build/Dockerfile \
            --tag ghcr.io/hemidzada/opensaas-server:main \
            --push ./template/app
      
      - name: Build and Push Client Image
        run: |
          cat > Dockerfile.client <<EOF
          FROM pierrezemb/gostatic
          CMD ["-fallback", "index.html"]
          COPY ./build /srv/http
          EOF
          
          docker buildx build \
            --file ./Dockerfile.client \
            --tag ghcr.io/hemidzada/opensaas-client:main \
            --push ./template/app/.wasp/build/web-app
      
      - name: Trigger Coolify Deploys
        run: |
          curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}
          curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
