name: Deploy OpenSaaS to Coolify

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- EKSİK MIGRATIONS KLASÖRÜNÜ OTOMATİK OLARAK ÇEKİYORUZ ---
      - name: Fetch Missing Migrations Folder
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git remote add upstream https://github.com/wasp-lang/open-saas.git
          git config core.sparseCheckout true
          echo "template/app/migrations" >> .git/info/sparse-checkout
          git pull upstream main --depth=1
          # Eğer bir değişiklik olursa, bunu kendi deponuza kaydedin
          git commit -m "feat: Add missing migrations folder" || echo "Migrations folder already exists."
          git push origin main

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- 1. Projeyi Derle ---
      - name: Install Dependencies and Build Project
        run: |
          cd ./template/app
          npm install
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          /home/runner/.local/bin/wasp build
          
          echo "Building client for production..."
          cd ./.wasp/build/web-app
          REACT_APP_API_URL=https://api.vidhub.ai npm run build

      # --- 2. Sunucu Dockerfile'ını Düzelt ---
      - name: Fix Server Dockerfile for Database Migrations
        run: |
          # Dockerfile'a veritabanı migrate komutunu ve migrations klasörünü kopyalamayı ekliyoruz
          sed -i '/EXPOSE/i COPY migrations ./migrations\nRUN npx prisma migrate deploy' ./template/app/.wasp/build/Dockerfile

      # --- 3. Sunucu (Server) İmajını Oluştur ve Yükle ---
      - name: Build and Push Server Image
        uses: docker/build-push-action@v4
        with:
          context: ./template/app
          file: ./template/app/.wasp/build/Dockerfile
          push: true
          tags: ghcr.io/hemidzada/opensaas-server:main

      # --- 4. İstemci (Client) İmajını Oluştur ve Yükle ---
      - name: Build and Push Client Image
        run: |
          cat > Dockerfile.client <<EOF
          FROM pierrezemb/gostatic
          CMD ["-fallback", "index.html"]
          COPY ./build /srv/http
          EOF

          docker buildx build \
            --file ./Dockerfile.client \
            --tag ghcr.io/hemidzada/opensaas-client:main \
            --push ./template/app/.wasp/build/web-app
      
      # --- 5. Coolify'i Tetikle ---
      - name: Trigger Coolify Deploys
        run: |
          curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}
          curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
