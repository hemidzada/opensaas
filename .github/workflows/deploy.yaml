name: Deploy OpenSaaS to Coolify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- 1. Sunucu (Server) Kurulumu ---
      # Bu bölüm zaten çalışıyor ve stabildir.
      - name: Build and push server Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.server
          push: true
          tags: ghcr.io/hemidzada/opensaas-server:main

      # --- 2. İstemci (Client) Kurulumu ---
      # Tüm adımları tek bir blokta birleştirerek klasör sorunlarını kökünden çözüyoruz.
      - name: Build and push client Docker image
        run: |
          echo "--> 1. Navigating to the app directory..."
          cd ./template/app

          echo "--> 2. Installing npm dependencies..."
          npm install

          echo "--> 3. Installing Wasp and building the client..."
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          /home/runner/.local/bin/wasp build
          
          echo "--> 4. Creating the client Dockerfile in the root..."
          # Dockerfile'ı projenin ana dizininde oluşturuyoruz.
          cat > ../../client.Dockerfile <<EOF
          FROM nginx:alpine
          COPY ./template/app/.wasp/build/web-app/build /usr/share/nginx/html
          EOF
          
          echo "--> 5. Building and pushing the client image from the root..."
          # Ana dizine geri dönüp, build komutunu oradan çalıştırıyoruz.
          cd ../../
          docker buildx build --file ./client.Dockerfile --tag ghcr.io/hemidzada/opensaas-client:main --push .
      
      # --- 3. Coolify'i Tetikleme ---
      - name: Trigger Coolify server deploy
        run: curl -X POST ${{ secrets.SERVER_COOLIFY_WEBHOOK }}

      - name: Trigger Coolify client deploy
        run: curl -X POST ${{ secrets.CLIENT_COOLIFY_WEBHOOK }}
